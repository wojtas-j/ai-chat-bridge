name: CI
on:
  push:
    branches:
      - master
      #- 'bugfix/**'
  pull_request:
    branches:
      - master
      #- 'bugfix/**'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and run containers
        run: |
          docker compose -f docker-compose-prod.yaml up --build -d
          sleep 180
          docker compose -f docker-compose-prod.yaml logs backend
          docker exec aichatbridge-backend curl -v http://localhost:8080/actuator/health || echo "Healthcheck failed"
        env:
          SPRING_PROFILES_ACTIVE: prod
          POSTGRES_DB_HOST: ${{ secrets.POSTGRES_DB_HOST }}
          POSTGRES_DB_PORT: ${{ secrets.POSTGRES_DB_PORT }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          OPENAI_API_KEY_FOR_DISCORD: ${{ secrets.OPENAI_API_KEY_FOR_DISCORD }}
          OPEN_AI_MODEL_FOR_DISCORD: gpt-4o-mini
          MAX_TOKENS_OPEN_AI_FOR_DISCORD: 500
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION_MS: 1800000
          JWT_REFRESH_EXPIRATION_DAYS: 7
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          SALT: ${{ secrets.SALT }}
      - name: Run backend tests
        run: |
          docker run --rm --network ai-chat-bridge_app-network -v $(pwd)/backend:/app -w /app gradle:8.10-jdk21 /bin/sh -c "chmod +x ./gradlew && ./gradlew test"
        env:
          SPRING_PROFILES_ACTIVE: prod
          POSTGRES_DB_HOST: db
          POSTGRES_DB_PORT: ${{ secrets.POSTGRES_DB_PORT }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      #- name: Log in to GitHub Container Registry
      #  uses: docker/login-action@v3
      #  with:
      #    registry: ghcr.io
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.GITHUB_TOKEN }}
      #- name: Verify images exist
      #  run: |
      #    docker images
      #    docker inspect ai-chat-bridge_backend:latest || echo "Image ai-chat-bridge_backend:latest not found"
      #    docker inspect ai-chat-bridge_frontend:latest || echo "Image ai-chat-bridge_frontend:latest not found"
      #- name: Push images
      #  run: |
      #      docker tag wojtas-j-ai-chat-bridge_backend:latest ghcr.io/wojtas-j/ai-chat-bridge/aichatbridge-backend:latest
      #      docker tag wojtas-j-ai-chat-bridge_frontend:latest ghcr.io/wojtas-j/ai-chat-bridge/aichatbridge-frontend:latest
      #      docker push ghcr.io/wojtas-j/ai-chat-bridge/aichatbridge-backend:latest
      #      docker push ghcr.io/wojtas-j/ai-chat-bridge/aichatbridge-frontend:latest
      - name: Stop containers
        if: always()
        run: docker compose -f docker-compose-prod.yaml down
