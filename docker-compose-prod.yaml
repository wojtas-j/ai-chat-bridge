services:
  db:
    image: postgres:17.6-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 1024M
        reservations:
          cpus: "0.25"
          memory: 256M
    networks:
      - app-network

  backend:
    image: wojtas-j-ai-chat-bridge_backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aichatbridge-backend
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - POSTGRES_DB_HOST=db
      - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - OPENAI_API_KEY_FOR_DISCORD=${OPENAI_API_KEY_FOR_DISCORD}
      - OPEN_AI_MODEL_FOR_DISCORD=gpt-4o-mini
      - MAX_TOKENS_OPEN_AI_FOR_DISCORD=500
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_MS=1800000
      - JWT_REFRESH_EXPIRATION_DAYS=7
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - SALT=${SALT}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 15
      start_period: 120s
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 2048M
        reservations:
          cpus: "0.5"
          memory: 512M
    networks:
      - app-network

  frontend:
    image: wojtas-j-ai-chat-bridge_frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aichatbridge-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data: