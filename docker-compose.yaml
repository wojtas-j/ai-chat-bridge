services:
  db:                                    # Service called "db" for database
    image: postgres:17.6-alpine          # Postgres version
    container_name: postgres_db          # Name of the running container
    restart: unless-stopped              # Automatically restart unless manually stopped
    env_file:
      - .env.dev                         # Load environment variables (user, password, db name) from .env.dev file
    ports:
      - "5432:5432"                      # Map host port 5432 to container port 5432 (Postgres default)
    volumes:
      - db_data:/var/lib/postgresql/data # Persist database data in a named Docker volume
    healthcheck:                         # Health check ensures Postgres is ready before other services connect
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"] # Check if DB accepts connections
      interval: 10s                      # Run healthcheck every 10 seconds
      timeout: 5s                        # Fail if no response within 5 seconds
      retries: 5                         # Retry up to 5 times before marking as unhealthy
      start_period: 10s                  # Give container 10s to properly start before running checks
    deploy:
      resources:                         # Limit and reserve container resources
        limits:
          cpus: "0.50"                   # Max CPU limit in %
          memory: 1024M                  # Max RAM memory limit in M
        reservations:
          cpus: "0.25"                   # Reserve at least 25% CPU
          memory: 256M                   # Reserve at least 256MB RAM

volumes:
  db_data:                               # Named volume to persist PostgreSQL data even if the container is removed
